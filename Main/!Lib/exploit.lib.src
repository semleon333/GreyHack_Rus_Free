//либа для работы с эксплоитами

//STANDARD_SERVICES_PORTS=[21,22,25,80,1222,3306,3307,6667,8080,37777]
// ftp ssh smtp http rshell employees sql chat http cam
//char aliases
tab=char(9)
endl=char(10)
quote=char(34)
//color aliases
colEND="</color>"
colFFF="<color=#fff>"
colF22="<color=#f22>"
col2F2="<color=#2f2>"
col22F="<color=#22f>"
colFF2="<color=#ff2>"//yellow
col2FF="<color=#2ff>"//cyan
colF2F="<color=#f2f>"//magenta
ERR_PRINT=function(s,fg=0)
	print("<color=#F22><b> ERROR: </b></color>"+s+colFF2+" time: "+colFFF+str(time))
	if fg then return str else return 0
end function
fill=function(s, ln, side="s+", filler=" ")
	s=str(s)
	if s.len >= ln then return s
	filler=filler*ln
	if side=="s+" then return (s+filler)[:ln]
	if side=="+s" then return (filler+s)[-ln:]
end function



searchRouterInSubLan=function(ip)
  ip=ip.split(".")
  for i in range(0,255)
    ip[3]=i
    r=get_router(ip.join("."))
    if r then return r
  end for
  return 0
end function
getLibsFromIp=function(ip)
	if flag_tgtloc then router=searchRouterInSubLan(ip) else router=get_router(ip)
  if not router then return ERR_PRINT("router in this subnet not found")
  rv=[]
  if flag_tgtrouter then rv.push({"ip":router.local_ip,"lib":LibX.net_use(ip,0).dump_lib})
	if not flag_tgtloc then devip=router.local_ip else devip=ip
  ports=router.device_ports(devip)
  if typeof(ports)=="string" then return ERR_PRINT(tmp)
  for i in ports
    if (not flag_tgtloc and i.is_closed) or router.port_info(i).split(" ")[0]=="unknown" then continue
		rv.push({"ip":i.get_lan_ip,"lib":LibX.net_use(ip,i.port_number).dump_lib})
  end for
  if not rv then rv=0
  return rv
end function

LibX=include_lib("/lib/metaxploit.so")
input=params[0]
flag_tgtloc=0
if is_lan_ip(input) then flag_tgtloc=1
flag_tgtrouter=0
if get_router(input) then flag_tgtrouter=1
libs=getLibsFromIp(input)
for lib in libs
	print(fill(lib.ip,16)+lib.lib.lib_name)
end for
